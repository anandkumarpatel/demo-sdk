/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { ReadmedeoCore } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { createRegisterPrompt } from "./prompts.js";
import {
  createRegisterResource,
  createRegisterResourceTemplate,
} from "./resources.js";
import { MCPScope } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$petAddPet } from "./tools/petAddPet.js";
import { tool$petAddPetRaw } from "./tools/petAddPetRaw.js";
import { tool$petDeletePet } from "./tools/petDeletePet.js";
import { tool$petFindPetsByStatus } from "./tools/petFindPetsByStatus.js";
import { tool$petFindPetsByTags } from "./tools/petFindPetsByTags.js";
import { tool$petUpdatePet } from "./tools/petUpdatePet.js";
import { tool$petUpdatePetRaw } from "./tools/petUpdatePetRaw.js";
import { tool$petUpdatePetWithForm } from "./tools/petUpdatePetWithForm.js";
import { tool$petUploadFile } from "./tools/petUploadFile.js";
import { tool$storeDeleteOrder } from "./tools/storeDeleteOrder.js";
import { tool$storeGetOrderById } from "./tools/storeGetOrderById.js";
import { tool$storePlaceOrder } from "./tools/storePlaceOrder.js";
import { tool$userCreateUser } from "./tools/userCreateUser.js";
import { tool$userCreateUsersWithArrayInput } from "./tools/userCreateUsersWithArrayInput.js";
import { tool$userCreateUsersWithListInput } from "./tools/userCreateUsersWithListInput.js";
import { tool$userDeleteUser } from "./tools/userDeleteUser.js";
import { tool$userGetUserByName } from "./tools/userGetUserByName.js";
import { tool$userLoginUser } from "./tools/userLoginUser.js";
import { tool$userLogoutUser } from "./tools/userLogoutUser.js";
import { tool$userUpdateUser } from "./tools/userUpdateUser.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  allowedTools?: string[] | undefined;
  scopes?: MCPScope[] | undefined;
  serverURL?: string | undefined;
  petstoreAuth?: SDKOptions["petstoreAuth"] | undefined;
  serverIdx?: SDKOptions["serverIdx"] | undefined;
}) {
  const server = new McpServer({
    name: "Readmedeo",
    version: "0.0.2",
  });

  const client = new ReadmedeoCore({
    petstoreAuth: deps.petstoreAuth,
    serverURL: deps.serverURL,
    serverIdx: deps.serverIdx,
  });

  const scopes = new Set(deps.scopes);

  const allowedTools = deps.allowedTools && new Set(deps.allowedTools);
  const tool = createRegisterTool(
    deps.logger,
    server,
    client,
    scopes,
    allowedTools,
  );
  const resource = createRegisterResource(deps.logger, server, client, scopes);
  const resourceTemplate = createRegisterResourceTemplate(
    deps.logger,
    server,
    client,
    scopes,
  );
  const prompt = createRegisterPrompt(deps.logger, server, client, scopes);
  const register = { tool, resource, resourceTemplate, prompt };
  void register; // suppress unused warnings

  tool(tool$petAddPet);
  tool(tool$petAddPetRaw);
  tool(tool$petUpdatePet);
  tool(tool$petUpdatePetRaw);
  tool(tool$petFindPetsByStatus);
  tool(tool$petFindPetsByTags);
  tool(tool$petUpdatePetWithForm);
  tool(tool$petDeletePet);
  tool(tool$petUploadFile);
  tool(tool$storePlaceOrder);
  tool(tool$storeGetOrderById);
  tool(tool$storeDeleteOrder);
  tool(tool$userCreateUser);
  tool(tool$userCreateUsersWithArrayInput);
  tool(tool$userCreateUsersWithListInput);
  tool(tool$userLoginUser);
  tool(tool$userLogoutUser);
  tool(tool$userGetUserByName);
  tool(tool$userUpdateUser);
  tool(tool$userDeleteUser);

  return server;
}
